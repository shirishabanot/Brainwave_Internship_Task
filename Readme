Text Data - Sentiment Analysis
Sprint 1: Creating a DataFrame from Raw Text Files
Overview
This sprint involves importing raw text data, organizing it into a structured DataFrame, and performing initial data exploration.

Import Libraries: Libraries such as pandas, numpy, and matplotlib are used for data manipulation and visualization.

Extracting and Loading Data:

The raw data, stored in a zip file, is extracted.
Directory traversal techniques are used to load text files and populate a DataFrame.
Exploratory Data Analysis (EDA):

Data exploration is conducted to understand key patterns, such as the distribution of star ratings and common words in reviews.
Visualization tools like bar plots and word clouds highlight frequently occurring terms and the overall sentiment.
Insights from EDA
Word Frequency: Words like "the," "and," "to" are common and need to be removed (stop word removal).
Review Distribution: A significant majority of the reviews are positive, with five-star ratings being the most common.
Word Clouds: Highlight key product-related terms such as "taste," "love," and "product," which can provide insights into customer sentiment.
Sprint 2: Building a Sentiment Analysis Model
Steps:
Segregate Input and Output:

Input data comprises review texts, while outputs include corresponding sentiment labels (e.g., positive/negative or star ratings).
Train-Test Split:

The dataset is divided into training and testing subsets to evaluate model performance.
Data Preprocessing:

Cleaning Text Data:
Stop word removal
Tokenization
Lemmatization
Text data is converted into numerical formats using vectorization techniques such as Bag of Words (BoW) or TF-IDF.
Model Training:

Machine learning models such as Naive Bayes are used for classification.
The focus is on scalable and efficient algorithms to handle large datasets.
Model Evaluation
The trained model's accuracy is measured on the test set.
Results such as accuracy, precision, recall, and F1-score are used to gauge the model's performance.
Additional Observations:
The dataset's structure allows for insightful analysis, including patterns in positive and negative reviews.
Preprocessing steps are critical to improve the model's understanding of natural language data.
